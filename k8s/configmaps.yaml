---
apiVersion: v1
kind: ConfigMap
metadata:
  name: teateach-backend-config
  namespace: teateach
  labels:
    app: teateach-backend
    component: config
data:
  # Application Configuration
  SPRING_PROFILES_ACTIVE: "production"
  SERVER_PORT: "8080"
  MANAGEMENT_SERVER_PORT: "8081"
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,info,metrics,prometheus"
  MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: "when-authorized"
  MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
  
  # Database Configuration
  SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-service:3306/teateach?useSSL=true&requireSSL=true&verifyServerCertificate=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC"
  SPRING_DATASOURCE_DRIVER_CLASS_NAME: "com.mysql.cj.jdbc.Driver"
  SPRING_JPA_HIBERNATE_DDL_AUTO: "validate"
  SPRING_JPA_SHOW_SQL: "false"
  SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: "org.hibernate.dialect.MySQL8Dialect"
  SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "false"
  SPRING_JPA_PROPERTIES_HIBERNATE_USE_SQL_COMMENTS: "false"
  
  # Redis Configuration
  SPRING_REDIS_HOST: "redis-service"
  SPRING_REDIS_PORT: "6379"
  SPRING_REDIS_DATABASE: "0"
  SPRING_REDIS_TIMEOUT: "2000ms"
  SPRING_REDIS_LETTUCE_POOL_MAX_ACTIVE: "8"
  SPRING_REDIS_LETTUCE_POOL_MAX_IDLE: "8"
  SPRING_REDIS_LETTUCE_POOL_MIN_IDLE: "0"
  
  # File Storage Configuration
  FILE_STORAGE_TYPE: "minio"
  MINIO_ENDPOINT: "http://minio-service:9000"
  MINIO_BUCKET_NAME: "teateach-files"
  
  # AI Service Configuration
  AI_SERVICE_TYPE: "ollama"
  OLLAMA_BASE_URL: "http://ollama-service:11434"
  OLLAMA_MODEL: "llama2"
  OLLAMA_TIMEOUT: "30s"
  
  # Email Configuration
  SPRING_MAIL_HOST: "smtp.gmail.com"
  SPRING_MAIL_PORT: "587"
  SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
  SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
  
  # Security Configuration
  JWT_EXPIRATION: "86400000"
  CORS_ALLOWED_ORIGINS: "https://teateach.com,https://www.teateach.com"
  
  # Logging Configuration
  LOGGING_LEVEL_COM_TEATEACH: "INFO"
  LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: "WARN"
  LOGGING_LEVEL_ORG_HIBERNATE_SQL: "WARN"
  LOGGING_PATTERN_CONSOLE: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  LOGGING_PATTERN_FILE: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  
  # Cache Configuration
  SPRING_CACHE_TYPE: "redis"
  SPRING_CACHE_REDIS_TIME_TO_LIVE: "3600000"
  
  # Rate Limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_REQUESTS_PER_MINUTE: "100"
  
  # WebSocket Configuration
  WEBSOCKET_ALLOWED_ORIGINS: "https://teateach.com,https://www.teateach.com"
  
  # Monitoring
  METRICS_ENABLED: "true"
  HEALTH_CHECK_ENABLED: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: teateach-frontend-config
  namespace: teateach
  labels:
    app: teateach-frontend
    component: config
data:
  # API Configuration
  VUE_APP_API_BASE_URL: "https://api.teateach.com"
  VUE_APP_WS_BASE_URL: "wss://api.teateach.com"
  
  # Environment
  NODE_ENV: "production"
  VUE_APP_ENV: "production"
  
  # Features
  VUE_APP_ENABLE_ANALYTICS: "true"
  VUE_APP_ENABLE_ERROR_REPORTING: "true"
  VUE_APP_ENABLE_PERFORMANCE_MONITORING: "true"
  
  # File Upload
  VUE_APP_MAX_FILE_SIZE: "10485760"
  VUE_APP_ALLOWED_FILE_TYPES: "pdf,doc,docx,ppt,pptx,txt,jpg,jpeg,png,gif,mp4,avi,mov"
  
  # UI Configuration
  VUE_APP_THEME: "default"
  VUE_APP_LANGUAGE: "en"
  VUE_APP_TIMEZONE: "UTC"
  
  # Security
  VUE_APP_ENABLE_CSP: "true"
  VUE_APP_ENABLE_HTTPS_ONLY: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: teateach
  labels:
    app: nginx
    component: config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;
        
        # Gzip
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; media-src 'self'; object-src 'none'; frame-src 'none';" always;
        
        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Static files with caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
            
            # API proxy
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://teateach-backend-service:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
            
            # WebSocket proxy
            location /ws/ {
                proxy_pass http://teateach-backend-service:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 7d;
                proxy_send_timeout 7d;
                proxy_read_timeout 7d;
            }
            
            # SPA fallback
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            # Security
            location ~ /\. {
                deny all;
            }
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: teateach
  labels:
    app: filebeat
    component: config
data:
  filebeat.yml: |
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*teateach*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
    
    output.elasticsearch:
      hosts: ["elasticsearch-service:9200"]
      index: "teateach-logs-%{+yyyy.MM.dd}"
    
    setup.template.name: "teateach"
    setup.template.pattern: "teateach-*"
    setup.template.settings:
      index.number_of_shards: 1
      index.number_of_replicas: 1
    
    logging.level: info
    logging.to_files: true
    logging.files:
      path: /var/log/filebeat
      name: filebeat
      keepfiles: 7
      permissions: 0644

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: teateach
  labels:
    app: prometheus
    component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager-service:9093
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'teateach-backend'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - teateach
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: teateach-backend-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: actuator
        metrics_path: '/actuator/prometheus'
      
      - job_name: 'mysql-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - teateach
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: mysql-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
      
      - job_name: 'redis-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - teateach
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: redis-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
      
      - job_name: 'nginx-exporter'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - teateach
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: teateach-frontend-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - teateach
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

  alert_rules.yml: |
    groups:
      - name: teateach.rules
        rules:
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} errors per second"
          
          - alert: HighMemoryUsage
            expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage detected"
              description: "Memory usage is {{ $value | humanizePercentage }}"
          
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total[5m]) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is {{ $value | humanizePercentage }}"
          
          - alert: DatabaseConnectionFailure
            expr: mysql_up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Database connection failure"
              description: "MySQL database is not responding"
          
          - alert: RedisConnectionFailure
            expr: redis_up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Redis connection failure"
              description: "Redis cache is not responding"
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping"